# coding: utf-8

"""
    Torn API

      * The development of Torn's API v2 is still ongoing.  * If selections remain unaltered, they will default to the API v1 version.  * Unlike API v1, API v2 accepts both selections and IDs as path and query parameters.  * If any discrepancies or errors are found, please submit a [bug report](https://www.torn.com/forums.php#/p=forums&f=19&b=0&a=0) on the Torn Forums.  * In case you're using bots to check for changes on openapi.json file, make sure to specificy a custom user-agent header - CloudFlare sometimes prevents requests from default user-agents.

    The version of the OpenAPI document: 1.5.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from tornclient.models.personal_stats_attacking_popular_attacking import PersonalStatsAttackingPopularAttacking

class TestPersonalStatsAttackingPopularAttacking(unittest.TestCase):
    """PersonalStatsAttackingPopularAttacking unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> PersonalStatsAttackingPopularAttacking:
        """Test PersonalStatsAttackingPopularAttacking
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `PersonalStatsAttackingPopularAttacking`
        """
        model = PersonalStatsAttackingPopularAttacking()
        if include_optional:
            return PersonalStatsAttackingPopularAttacking(
                attacks = tornclient.models.personal_stats_attacking_popular_attacking_attacks.PersonalStatsAttackingPopular_attacking_attacks(
                    won = 56, 
                    lost = 56, 
                    stalemate = 56, 
                    assist = 56, ),
                defends = tornclient.models.personal_stats_attacking_popular_attacking_defends.PersonalStatsAttackingPopular_attacking_defends(
                    won = 56, 
                    lost = 56, 
                    stalemate = 56, ),
                elo = 56,
                escapes = tornclient.models.personal_stats_attacking_public_attacking_escapes.PersonalStatsAttackingPublic_attacking_escapes(
                    player = 56, 
                    foes = 56, ),
                killstreak = tornclient.models.personal_stats_attacking_public_attacking_killstreak.PersonalStatsAttackingPublic_attacking_killstreak(
                    best = 56, ),
                hits = tornclient.models.personal_stats_attacking_public_attacking_hits.PersonalStatsAttackingPublic_attacking_hits(
                    success = 56, 
                    miss = 56, 
                    critical = 56, 
                    one_hit_kills = 56, ),
                damage = tornclient.models.personal_stats_attacking_public_attacking_damage.PersonalStatsAttackingPublic_attacking_damage(
                    total = 56, 
                    best = 56, ),
                networth = tornclient.models.personal_stats_attacking_public_attacking_networth.PersonalStatsAttackingPublic_attacking_networth(
                    money_mugged = 56, 
                    largest_mug = 56, 
                    items_looted = 56, ),
                ammunition = tornclient.models.personal_stats_attacking_public_attacking_ammunition.PersonalStatsAttackingPublic_attacking_ammunition(
                    total = 56, 
                    special = 56, 
                    hollow_point = 56, 
                    tracer = 56, 
                    piercing = 56, 
                    incendiary = 56, ),
                faction = tornclient.models.personal_stats_attacking_popular_attacking_faction.PersonalStatsAttackingPopular_attacking_faction(
                    respect = 56, 
                    ranked_war_hits = 56, )
            )
        else:
            return PersonalStatsAttackingPopularAttacking(
                attacks = tornclient.models.personal_stats_attacking_popular_attacking_attacks.PersonalStatsAttackingPopular_attacking_attacks(
                    won = 56, 
                    lost = 56, 
                    stalemate = 56, 
                    assist = 56, ),
                defends = tornclient.models.personal_stats_attacking_popular_attacking_defends.PersonalStatsAttackingPopular_attacking_defends(
                    won = 56, 
                    lost = 56, 
                    stalemate = 56, ),
                elo = 56,
                escapes = tornclient.models.personal_stats_attacking_public_attacking_escapes.PersonalStatsAttackingPublic_attacking_escapes(
                    player = 56, 
                    foes = 56, ),
                killstreak = tornclient.models.personal_stats_attacking_public_attacking_killstreak.PersonalStatsAttackingPublic_attacking_killstreak(
                    best = 56, ),
                hits = tornclient.models.personal_stats_attacking_public_attacking_hits.PersonalStatsAttackingPublic_attacking_hits(
                    success = 56, 
                    miss = 56, 
                    critical = 56, 
                    one_hit_kills = 56, ),
                damage = tornclient.models.personal_stats_attacking_public_attacking_damage.PersonalStatsAttackingPublic_attacking_damage(
                    total = 56, 
                    best = 56, ),
                networth = tornclient.models.personal_stats_attacking_public_attacking_networth.PersonalStatsAttackingPublic_attacking_networth(
                    money_mugged = 56, 
                    largest_mug = 56, 
                    items_looted = 56, ),
                ammunition = tornclient.models.personal_stats_attacking_public_attacking_ammunition.PersonalStatsAttackingPublic_attacking_ammunition(
                    total = 56, 
                    special = 56, 
                    hollow_point = 56, 
                    tracer = 56, 
                    piercing = 56, 
                    incendiary = 56, ),
                faction = tornclient.models.personal_stats_attacking_popular_attacking_faction.PersonalStatsAttackingPopular_attacking_faction(
                    respect = 56, 
                    ranked_war_hits = 56, ),
        )
        """

    def testPersonalStatsAttackingPopularAttacking(self):
        """Test PersonalStatsAttackingPopularAttacking"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
