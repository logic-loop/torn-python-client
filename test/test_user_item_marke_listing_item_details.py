# coding: utf-8

"""
    Torn API

      * The development of Torn's API v2 is still ongoing.  * If selections remain unaltered, they will default to the API v1 version.  * Unlike API v1, API v2 accepts both selections and IDs as path and query parameters.  * If any discrepancies or errors are found, please submit a [bug report](https://www.torn.com/forums.php#/p=forums&f=19&b=0&a=0) on the Torn Forums.  * In case you're using bots to check for changes on openapi.json file, make sure to specificy a custom user-agent header - CloudFlare sometimes prevents requests from default user-agents.

    The version of the OpenAPI document: 1.5.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from tornclient.models.user_item_marke_listing_item_details import UserItemMarkeListingItemDetails

class TestUserItemMarkeListingItemDetails(unittest.TestCase):
    """UserItemMarkeListingItemDetails unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> UserItemMarkeListingItemDetails:
        """Test UserItemMarkeListingItemDetails
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `UserItemMarkeListingItemDetails`
        """
        model = UserItemMarkeListingItemDetails()
        if include_optional:
            return UserItemMarkeListingItemDetails(
                id = 56,
                name = '',
                type = '',
                rarity = 'yellow',
                uid = 56,
                stats = tornclient.models.item_market_listing_item_stats.ItemMarketListingItemStats(
                    damage = 1.337, 
                    accuracy = 1.337, 
                    armor = 1.337, 
                    quality = 1.337, ),
                bonuses = [
                    tornclient.models.item_market_listing_item_bonus.ItemMarketListingItemBonus(
                        id = 56, 
                        title = '', 
                        description = '', 
                        value = 56, )
                    ]
            )
        else:
            return UserItemMarkeListingItemDetails(
                id = 56,
                name = '',
                type = '',
                rarity = 'yellow',
                uid = 56,
                stats = tornclient.models.item_market_listing_item_stats.ItemMarketListingItemStats(
                    damage = 1.337, 
                    accuracy = 1.337, 
                    armor = 1.337, 
                    quality = 1.337, ),
                bonuses = [
                    tornclient.models.item_market_listing_item_bonus.ItemMarketListingItemBonus(
                        id = 56, 
                        title = '', 
                        description = '', 
                        value = 56, )
                    ],
        )
        """

    def testUserItemMarkeListingItemDetails(self):
        """Test UserItemMarkeListingItemDetails"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
