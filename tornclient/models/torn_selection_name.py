# coding: utf-8

"""
    Torn API

      * The development of Torn's API v2 is still ongoing.  * If selections remain unaltered, they will default to the API v1 version.  * Unlike API v1, API v2 accepts both selections and IDs as path and query parameters.  * If any discrepancies or errors are found, please submit a [bug report](https://www.torn.com/forums.php#/p=forums&f=19&b=0&a=0) on the Torn Forums.  * In case you're using bots to check for changes on openapi.json file, make sure to specificy a custom user-agent header - CloudFlare sometimes prevents requests from default user-agents.

    The version of the OpenAPI document: 1.5.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


from __future__ import annotations
import json
from enum import Enum
from typing_extensions import Self


class TornSelectionName(str, Enum):
    """
    The following selections will fallback to API v1 and may change at any time: 'bank','cards','cityshops','companies','competition','dirtybombs','gyms','honors','itemdetails','itemstats','medals','organisedcrimes','pawnshop','pokertables','properties','raidreport','raids','rockpaperscissors','searchforcash','shoplifting','stats','stocks'.  *  The following selections are not available in API v2: 'chainreport', 'rackets', 'rankedwarreport', 'rankedwars', 'territorynames', 'territorywarreport', 'territorywars'.
    """

    """
    allowed enum values
    """
    ATTACKLOG = 'attacklog'
    BOUNTIES = 'bounties'
    CALENDAR = 'calendar'
    CRIMES = 'crimes'
    EDUCATION = 'education'
    FACTIONHOF = 'factionhof'
    FACTIONTREE = 'factiontree'
    HOF = 'hof'
    ITEMAMMO = 'itemammo'
    ITEMMODS = 'itemmods'
    ITEMS = 'items'
    LOGCATEGORIES = 'logcategories'
    LOGTYPES = 'logtypes'
    LOOKUP = 'lookup'
    SUBCRIMES = 'subcrimes'
    TERRITORY = 'territory'
    TIMESTAMP = 'timestamp'
    BANK = 'bank'
    CARDS = 'cards'
    CITYSHOPS = 'cityshops'
    COMPANIES = 'companies'
    COMPETITION = 'competition'
    DIRTYBOMBS = 'dirtybombs'
    GYMS = 'gyms'
    HONORS = 'honors'
    ITEMDETAILS = 'itemdetails'
    ITEMSTATS = 'itemstats'
    MEDALS = 'medals'
    ORGANISEDCRIMES = 'organisedcrimes'
    PAWNSHOP = 'pawnshop'
    POKERTABLES = 'pokertables'
    PROPERTIES = 'properties'
    RAIDREPORT = 'raidreport'
    RAIDS = 'raids'
    ROCKPAPERSCISSORS = 'rockpaperscissors'
    SEARCHFORCASH = 'searchforcash'
    SHOPLIFTING = 'shoplifting'
    STATS = 'stats'
    STOCKS = 'stocks'
    CHAINREPORT = 'chainreport'
    RACKETS = 'rackets'
    RANKEDWARREPORT = 'rankedwarreport'
    RANKEDWARS = 'rankedwars'
    TERRITORYNAMES = 'territorynames'
    TERRITORYWARREPORT = 'territorywarreport'
    TERRITORYWARS = 'territorywars'

    @classmethod
    def from_json(cls, json_str: str) -> Self:
        """Create an instance of TornSelectionName from a JSON string"""
        return cls(json.loads(json_str))


